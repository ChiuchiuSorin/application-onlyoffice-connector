if ($http_host){
  set $redirect_host $http_host;
}

if ($http_x_forwarded_host){
  set $redirect_host $http_x_forwarded_host;
}

if ($http_x_forwarded_proto){
  set $redirect_host $host;

  #support old version
  rewrite ^\/OfficeWeb(\/apps\/.*)$ $http_x_forwarded_proto://$redirect_host/2016-06-24-11-21/web-apps$1 redirect;

  #script caching protection
  rewrite ^(\/web-apps\/(?!api\/).*)$ $http_x_forwarded_proto://$redirect_host/2016-06-24-11-21$1 redirect;
}

#support old version
rewrite ^\/OfficeWeb(\/apps\/.*)$ /2016-06-24-11-21/web-apps$1 redirect;

#script caching protection
rewrite ^(\/web-apps\/apps\/(?!api\/).*)$ /2016-06-24-11-21$1 redirect;

location ~ ^(\/2016-06-24-11-21)?\/(web-apps|sdkjs)(?!\/fonts\/)(\/.*)$ {
  expires 365d;
  alias /var/www/onlyoffice/documentserver/$2$3;
}

rewrite ^/$ /welcome/ redirect;
location ~ ^(\/welcome\/.*)$ {
  expires 365d;
  alias /var/www/onlyoffice/documentserver$1;
}

location ~ ^(\/2016-06-24-11-21)?(\/sdkjs\/fonts\/.*) {
  proxy_cache_min_uses 1;
  proxy_cache_key $scheme$proxy_host$uri$is_args$args;
  proxy_cache fonts_cache;
  proxy_cache_use_stale updating error timeout invalid_header http_500;
  proxy_cache_valid 1d;
  proxy_cache_methods GET HEAD;

  proxy_pass http://docservice$2;
}

location ~ ^(\/cache\/files.*)(\/.*) {
  alias /var/lib/onlyoffice/documentserver/App_Data$1;
  add_header Content-Disposition $arg_disposition;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

  # set $secret_string onlyoffice;
  # secure_link $arg_md5,$arg_expires;
  # secure_link_md5 "$secure_link_expires$uri$secret_string";

  # if ($secure_link = "") {
  #   return 403;
  # }

  # if ($secure_link = "0") {
  #     return 410;
  # }
}

location / {
  proxy_pass http://docservice;

  proxy_set_header Host $host;

  if ($http_x_forwarded_host = ''){
    set $http_x_forwarded_host $server_name;
  }
  if ($http_x_forwarded_proto = ''){
    set $http_x_forwarded_proto $scheme;
  }
  proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
  proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

     if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }
}

location /doc/ {
  proxy_pass http://docservice;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header Host $host;

  if ($http_x_forwarded_host = ''){
    set $http_x_forwarded_host $server_name;
  }
  if ($http_x_forwarded_proto = ''){
    set $http_x_forwarded_proto $scheme;
  }
  proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
  proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
}
